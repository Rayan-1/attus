name: Docker Compose Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: dbname
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Build and Deploy with Docker Compose
        continue-on-error: true
        run: |
          docker-compose up --build -d
          sleep 10  # Wait for services to fully start
          docker-compose ps  # List running containers after startup

      - name: Test connectivity to teste-front service
        continue-on-error: true
        run: |
          curl -sSf http://localhost:5000 || exit 1

      - name: Test connectivity to teste-back service
        continue-on-error: true
        run: |
          curl -sSf http://localhost:8080 || exit 1

      - name: Install OpenJDK 11
        run: |
          sudo apt-get install -y openjdk-11-jdk

      - name: SonarCloud Scan
        if: always()
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -sL https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip -o sonar-scanner.zip
          unzip -o sonar-scanner.zip
          export PATH=$PATH:$PWD/sonar-scanner-4.6.2.2472-linux/bin
          sonar-scanner \
            -Dsonar.projectKey=your_project_key \
            -Dsonar.organization=your_organization \
            -Dsonar.sources=./ \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN
